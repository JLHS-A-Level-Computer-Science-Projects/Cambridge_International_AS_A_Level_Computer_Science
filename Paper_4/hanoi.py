# Created by 4AMAlan
# Annotated by DeepSeek
def hanoi(n, a, b, c): 
    """
    汉诺塔递归函数
    参数:
    n: 盘子数量（整数类型）
    a: 起始柱（字符串类型）
    b: 中转柱（字符串类型）  
    c: 目标柱（字符串类型）
    """
    
    # 基准情况：当只有一个盘子时，直接移动到目标柱
    if n == 1:
        print("将盘子从", a, "移动到", c)
    
    # 递归情况：当有多个盘子时
    else:
        # 第一步：将上面的n-1个盘子从起始柱a，借助目标柱c，移动到中转柱b
        # 注意：这里的参数顺序是(a, c, b)，意味着：
        # - 起始柱：a（保持不变）
        # - 目标柱：b（原来的中转柱变成了新的目标柱）
        # - 中转柱：c（原来的目标柱变成了新的中转柱）
        hanoi(n-1, a, c, b)
        
        # 第二步：将最底下的第n个盘子从起始柱a直接移动到目标柱c
        print("将盘子从", a, "移动到", c)
        
        # 第三步：将刚才移到中转柱b的n-1个盘子，借助起始柱a，移动到目标柱c
        # 注意：这里的参数顺序是(b, a, c)，意味着：
        # - 起始柱：b（现在n-1个盘子在中转柱b上）
        # - 目标柱：c（最终目标不变）
        # - 中转柱：a（原来的起始柱现在变成了中转柱）
        hanoi(n-1, b, a, c)

# 获取用户输入的盘子数量
n = int(input("请输入递归层数:"))

# 调用汉诺塔函数，初始状态：
# 起始柱a，中转柱b，目标柱c
hanoi(n, 'a', 'b', 'c')